{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Surveys Surveys API service. Prerequisites Docker Initialize the project Start the dev server for local development: docker-compose up Create a superuser to login to the admin: docker-compose run --rm web ./manage.py createsuperuser","title":"Home"},{"location":"#surveys","text":"Surveys API service.","title":"Surveys"},{"location":"#prerequisites","text":"Docker","title":"Prerequisites"},{"location":"#initialize-the-project","text":"Start the dev server for local development: docker-compose up Create a superuser to login to the admin: docker-compose run --rm web ./manage.py createsuperuser","title":"Initialize the project"},{"location":"api/authentication/","text":"Authentication Authentication is available to administrators only. To authenticate, include the token key in the Authorization HTTP header. Prefix it by the \"Token \" string, for example: Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b A curl request with Authorization header example: curl -X GET http://127.0.0.1:8000/api/v1/surveys/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' Unauthenticated requests to protected resources will result in an HTTP 401 Unauthorized response. Retrieving Tokens First, create superuser: docker-compose run --rm web ./manage.py createsuperuser Make a Request : POST /api-token-auth/ Parameters: Name Type Description username str Admin's username password str Admin's password Request data example: { \"username\" : \"oleg\", \"password\": \"t65#4$9)W!\" } Response : { \"token\" : \"9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b\" }","title":"Authentication"},{"location":"api/authentication/#authentication","text":"Authentication is available to administrators only. To authenticate, include the token key in the Authorization HTTP header. Prefix it by the \"Token \" string, for example: Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b A curl request with Authorization header example: curl -X GET http://127.0.0.1:8000/api/v1/surveys/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b' Unauthenticated requests to protected resources will result in an HTTP 401 Unauthorized response.","title":"Authentication"},{"location":"api/authentication/#retrieving-tokens","text":"First, create superuser: docker-compose run --rm web ./manage.py createsuperuser Make a Request : POST /api-token-auth/ Parameters: Name Type Description username str Admin's username password str Admin's password Request data example: { \"username\" : \"oleg\", \"password\": \"t65#4$9)W!\" } Response : { \"token\" : \"9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b\" }","title":"Retrieving Tokens"},{"location":"api/questions/","text":"Questions Supports adding, retrieving, updating and deleting questions. Note: Authorization required. POST a new question Request : POST /api/v1/questions/ Parameters: Name Type Required Description title str Yes The title for the new question. survey int Yes Related survey id. question_type text No Available options: 'text', 'select', 'select multiple'. Default : 'text'. response_options List[int] Depends Nested response options for the new question. Not required if question_type is 'text', otherwise required Request data example: { \"title\": \"What linter plugins/features have you used?\", \"survey\": 1, \"question_type\": \"select\", \"response_options\": [ { \"title\": \"Cognitive complexity check\" }, { \"title\": \"Variable names checker\" } ] } Response : Content-Type application/json 201 Created { \"pk\": 2, \"survey\": 1, \"survey_title\": \"Dev Survey\", \"title\": \"What linter plugins/features have you used?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 3, \"title\": \"Cognitive complexity check\", \"question\": 2 }, { \"id\": 4, \"title\": \"Variable names checker\", \"question\": 2 } ] } List all questions Request : GET /api/v1/questions/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ # question details ] GET question detail GET /api/v1/questions/{question_id}/ Response Content-Type application/json 200 OK { # question details } PATCH a question Request : PATCH /api/v1/questions/{questions_id}/ Response Content-Type application/json 200 OK { # survey details } DELETE a question Request : DELETE /api/v1/questions/{questions_id}/ Response : Content-Type application/json 204 No Content","title":"Questions"},{"location":"api/questions/#questions","text":"Supports adding, retrieving, updating and deleting questions. Note: Authorization required.","title":"Questions"},{"location":"api/questions/#post-a-new-question","text":"Request : POST /api/v1/questions/ Parameters: Name Type Required Description title str Yes The title for the new question. survey int Yes Related survey id. question_type text No Available options: 'text', 'select', 'select multiple'. Default : 'text'. response_options List[int] Depends Nested response options for the new question. Not required if question_type is 'text', otherwise required Request data example: { \"title\": \"What linter plugins/features have you used?\", \"survey\": 1, \"question_type\": \"select\", \"response_options\": [ { \"title\": \"Cognitive complexity check\" }, { \"title\": \"Variable names checker\" } ] } Response : Content-Type application/json 201 Created { \"pk\": 2, \"survey\": 1, \"survey_title\": \"Dev Survey\", \"title\": \"What linter plugins/features have you used?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 3, \"title\": \"Cognitive complexity check\", \"question\": 2 }, { \"id\": 4, \"title\": \"Variable names checker\", \"question\": 2 } ] }","title":"POST a new question"},{"location":"api/questions/#list-all-questions","text":"Request : GET /api/v1/questions/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ # question details ]","title":"List all questions"},{"location":"api/questions/#get-question-detail","text":"GET /api/v1/questions/{question_id}/ Response Content-Type application/json 200 OK { # question details }","title":"GET question detail"},{"location":"api/questions/#patch-a-question","text":"Request : PATCH /api/v1/questions/{questions_id}/ Response Content-Type application/json 200 OK { # survey details }","title":"PATCH a question"},{"location":"api/questions/#delete-a-question","text":"Request : DELETE /api/v1/questions/{questions_id}/ Response : Content-Type application/json 204 No Content","title":"DELETE a question"},{"location":"api/response-options/","text":"Response Options Accessible via surves or questions . Parameters: Name Type Required Description title str Yes The title for the new survey. question int No Related question ID, auto added on creating question.","title":"Response Options"},{"location":"api/response-options/#response-options","text":"Accessible via surves or questions . Parameters: Name Type Required Description title str Yes The title for the new survey. question int No Related question ID, auto added on creating question.","title":"Response Options"},{"location":"api/responses/","text":"Responses Only accessible via survey responses . Response Types - str if related question_type is 'text'. - int if related question_type is 'select'. - List[int] if related question_type is 'select multiple'. Parameters Name Type Required Description question int No Related question ID, auto added on creating survey response. response_text str Depends Required only if related question_type is 'text'. response_select List[int] Depends Required only if related question_type is 'select' or 'select multiple'. NOTE: If related question_type is 'select', int type is prefered for selecting single response option ID.","title":"Responses"},{"location":"api/responses/#responses","text":"Only accessible via survey responses .","title":"Responses"},{"location":"api/responses/#response-types","text":"- str if related question_type is 'text'. - int if related question_type is 'select'. - List[int] if related question_type is 'select multiple'.","title":"Response Types"},{"location":"api/responses/#parameters","text":"Name Type Required Description question int No Related question ID, auto added on creating survey response. response_text str Depends Required only if related question_type is 'text'. response_select List[int] Depends Required only if related question_type is 'select' or 'select multiple'. NOTE: If related question_type is 'select', int type is prefered for selecting single response option ID.","title":"Parameters"},{"location":"api/survey-responses/","text":"Survey Responses Supports adding, retrieving, updating and deleting survey responses. Survey Response is basically an response sheet with responses. POST a new survey When posting a new Survey Response, user_id (uuid4) is generated and saved to client cookie file. This user_id is automatically added to the corresponding survey response instance field. It is later used to access only user related survey responses. If user_id is found in user cookies, it is validated and used instead of creating a new one. Request : POST /api/v1/survey-responses/ Parameters: Name Type Required Description survey int Yes Related survey ID. responses array Yes Nested responses for the new survey response. For responses parameters check Response model. Survey Response request data example: { \"survey\": 1, \"responses\": [ { \"question\": 7, \"response_text\": \"mypy\" }, { \"question\": 6, \"response_select\": 9 }, { \"question\": 5, \"response_select\": [7,8] } ] } Response : Content-Type application/json 201 Created { \"pk\": 2, \"user_id\": \"857402d9-d573-42de-93f5-6e0f66caa528\", \"survey\": 1, \"responses\": [ { \"question\": 7, \"question_title\": \"Favourite type checker?\", \"response_text\": \"mypy\", \"response_select\": [], \"response_select_titles\": [] }, { \"question\": 6, \"question_title\": \"Favourite linter?\", \"response_text\": \"\", \"response_select\": [ 9 ], \"response_select_titles\": [ \"flake8\" ] }, { \"question\": 5, \"question_title\": \"What linter plugins/features have you used?\", \"response_text\": \"\", \"response_select\": [ 7, 8 ], \"response_select_titles\": [ \"Variable names checker\", \"Docstrings check\" ] } ] } List all surveys If user is authorized as admin, all survey responses are listed. If user is an AnonymousUser, only his survey responses are listed, based on cookies user_id. Request : GET /api/v1/survey-responses/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ # survey response results ] } GET survey response detail Request : GET /api/v1/survey-responses/{survey_response_id}/ Response Content-Type application/json 200 OK { # survey response details } DELETE survey response DELETE /api/v1/survey-responses/{survey_response_id}/ Response : Content-Type application/json 204 No Content Survey Responses can't be modified. PATCH method not allowed.","title":"Survey Responses"},{"location":"api/survey-responses/#survey-responses","text":"Supports adding, retrieving, updating and deleting survey responses. Survey Response is basically an response sheet with responses.","title":"Survey Responses"},{"location":"api/survey-responses/#post-a-new-survey","text":"When posting a new Survey Response, user_id (uuid4) is generated and saved to client cookie file. This user_id is automatically added to the corresponding survey response instance field. It is later used to access only user related survey responses. If user_id is found in user cookies, it is validated and used instead of creating a new one. Request : POST /api/v1/survey-responses/ Parameters: Name Type Required Description survey int Yes Related survey ID. responses array Yes Nested responses for the new survey response. For responses parameters check Response model. Survey Response request data example: { \"survey\": 1, \"responses\": [ { \"question\": 7, \"response_text\": \"mypy\" }, { \"question\": 6, \"response_select\": 9 }, { \"question\": 5, \"response_select\": [7,8] } ] } Response : Content-Type application/json 201 Created { \"pk\": 2, \"user_id\": \"857402d9-d573-42de-93f5-6e0f66caa528\", \"survey\": 1, \"responses\": [ { \"question\": 7, \"question_title\": \"Favourite type checker?\", \"response_text\": \"mypy\", \"response_select\": [], \"response_select_titles\": [] }, { \"question\": 6, \"question_title\": \"Favourite linter?\", \"response_text\": \"\", \"response_select\": [ 9 ], \"response_select_titles\": [ \"flake8\" ] }, { \"question\": 5, \"question_title\": \"What linter plugins/features have you used?\", \"response_text\": \"\", \"response_select\": [ 7, 8 ], \"response_select_titles\": [ \"Variable names checker\", \"Docstrings check\" ] } ] }","title":"POST a new survey"},{"location":"api/survey-responses/#list-all-surveys","text":"If user is authorized as admin, all survey responses are listed. If user is an AnonymousUser, only his survey responses are listed, based on cookies user_id. Request : GET /api/v1/survey-responses/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ # survey response results ] }","title":"List all surveys"},{"location":"api/survey-responses/#get-survey-response-detail","text":"Request : GET /api/v1/survey-responses/{survey_response_id}/ Response Content-Type application/json 200 OK { # survey response details }","title":"GET survey response detail"},{"location":"api/survey-responses/#delete-survey-response","text":"DELETE /api/v1/survey-responses/{survey_response_id}/ Response : Content-Type application/json 204 No Content Survey Responses can't be modified. PATCH method not allowed.","title":"DELETE survey response"},{"location":"api/surveys/","text":"Surveys Supports adding, retrieving, updating and deleting surveys. Survey is basically a questionnare sheet , a list of questions , some of which provide response options . POST a new survey Authorization header shoud be included for this request. Request : POST /api/v1/surveys/ Parameters: Name Type Required Description title str Yes The title for the new survey. start_date datetime Yes The start date of the new survey. Example: 2020-01-01T12:00:00 end_date datetime Yes The end date of the new survey. description str No The description for the new survey. questions array Yes The nested questions for the new survey. Request data example: { \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"title\": \"flake8\" }, { \"title\": \"pylint\" } ] } ] } Response : Content-Type application/json 201 Created { \"pk\": 1, \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"pk\": 1, \"survey\": 1, \"survey_title\": \"Test Survey\", \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 1, \"title\": \"flake8\", \"question\": 1 }, { \"id\": 2, \"title\": \"pylint\", \"question\": 1 } ] } ] } List all surveys If user is authorized as admin, all surveys are listed. If user is an AnonymousUser, only active surveys are listed. Request : GET /api/v1/surveys/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"pk\": 1, \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"pk\": 1, \"survey\": 1, \"survey_title\": \"Dev Survey\", \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 1, \"title\": \"flake8\", \"question\": 1 }, { \"id\": 2, \"title\": \"pylint\", \"question\": 1 } ] } ] } ] } GET survey detail Request : GET /api/v1/surveys/{survey_id}/ Response Content-Type application/json 200 OK { # survey details } PATCH a survey Request : PATCH /api/v1/surveys/{survey_id}/ All the survey fields can be individually updated. Notes: start_date can't be changed to update a specific question from multiple survey questions use questions endpoint to add a specific question to the survey questions list use questions endpoint to delete a specific question from the survey questions list use questions endpoint Response Content-Type application/json 200 OK { # survey details } DELETE a survey DELETE /api/v1/surveys/{survey_id}/ Response : Content-Type application/json 204 No Content","title":"Surveys"},{"location":"api/surveys/#surveys","text":"Supports adding, retrieving, updating and deleting surveys. Survey is basically a questionnare sheet , a list of questions , some of which provide response options .","title":"Surveys"},{"location":"api/surveys/#post-a-new-survey","text":"Authorization header shoud be included for this request. Request : POST /api/v1/surveys/ Parameters: Name Type Required Description title str Yes The title for the new survey. start_date datetime Yes The start date of the new survey. Example: 2020-01-01T12:00:00 end_date datetime Yes The end date of the new survey. description str No The description for the new survey. questions array Yes The nested questions for the new survey. Request data example: { \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"title\": \"flake8\" }, { \"title\": \"pylint\" } ] } ] } Response : Content-Type application/json 201 Created { \"pk\": 1, \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"pk\": 1, \"survey\": 1, \"survey_title\": \"Test Survey\", \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 1, \"title\": \"flake8\", \"question\": 1 }, { \"id\": 2, \"title\": \"pylint\", \"question\": 1 } ] } ] }","title":"POST a new survey"},{"location":"api/surveys/#list-all-surveys","text":"If user is authorized as admin, all surveys are listed. If user is an AnonymousUser, only active surveys are listed. Request : GET /api/v1/surveys/ Response Content-Type application/json 200 OK { \"count\": 1, \"next\": null, \"previous\": null, \"results\": [ { \"pk\": 1, \"title\": \"Dev Survey\", \"start_date\": \"2020-06-16T17:51:17\", \"end_date\": \"2020-09-16T17:51:17\", \"description\": \"This survey is about linting.\", \"questions\": [ { \"pk\": 1, \"survey\": 1, \"survey_title\": \"Dev Survey\", \"title\": \"Favourite linter?\", \"question_type\": \"select\", \"response_options\": [ { \"id\": 1, \"title\": \"flake8\", \"question\": 1 }, { \"id\": 2, \"title\": \"pylint\", \"question\": 1 } ] } ] } ] }","title":"List all surveys"},{"location":"api/surveys/#get-survey-detail","text":"Request : GET /api/v1/surveys/{survey_id}/ Response Content-Type application/json 200 OK { # survey details }","title":"GET survey detail"},{"location":"api/surveys/#patch-a-survey","text":"Request : PATCH /api/v1/surveys/{survey_id}/ All the survey fields can be individually updated. Notes: start_date can't be changed to update a specific question from multiple survey questions use questions endpoint to add a specific question to the survey questions list use questions endpoint to delete a specific question from the survey questions list use questions endpoint Response Content-Type application/json 200 OK { # survey details }","title":"PATCH a survey"},{"location":"api/surveys/#delete-a-survey","text":"DELETE /api/v1/surveys/{survey_id}/ Response : Content-Type application/json 204 No Content","title":"DELETE a survey"},{"location":"api/users/","text":"Users Supports registering, viewing, and updating user accounts. Register a new user account Request : POST /users/ Parameters: Name Type Required Description username string Yes The username for the new user. password string Yes The password for the new user account. first_name string No The user's given name. last_name string No The user's family name. email string No The user's email address. Note: Not Authorization Protected Response : Content-Type application/json 201 Created { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", \"auth_token\": \"132cf952e0165a274bf99e115ab483671b3d9ff6\" } The auth_token returned with this response should be stored by the client for authenticating future requests to the API. See Authentication . Get a user's profile information Request : GET /users/:id Parameters: Note: Authorization Protected Response : Content-Type application/json 200 OK { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", } Update your profile information Request : PUT/PATCH /users/:id Parameters: Name Type Description first_name string The first_name of the user object. last_name string The last_name of the user object. email string The user's email address. Note: All parameters are optional Authorization Protected Response : Content-Type application/json 200 OK { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", }","title":"Users"},{"location":"api/users/#users","text":"Supports registering, viewing, and updating user accounts.","title":"Users"},{"location":"api/users/#register-a-new-user-account","text":"Request : POST /users/ Parameters: Name Type Required Description username string Yes The username for the new user. password string Yes The password for the new user account. first_name string No The user's given name. last_name string No The user's family name. email string No The user's email address. Note: Not Authorization Protected Response : Content-Type application/json 201 Created { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", \"auth_token\": \"132cf952e0165a274bf99e115ab483671b3d9ff6\" } The auth_token returned with this response should be stored by the client for authenticating future requests to the API. See Authentication .","title":"Register a new user account"},{"location":"api/users/#get-a-users-profile-information","text":"Request : GET /users/:id Parameters: Note: Authorization Protected Response : Content-Type application/json 200 OK { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", }","title":"Get a user's profile information"},{"location":"api/users/#update-your-profile-information","text":"Request : PUT/PATCH /users/:id Parameters: Name Type Description first_name string The first_name of the user object. last_name string The last_name of the user object. email string The user's email address. Note: All parameters are optional Authorization Protected Response : Content-Type application/json 200 OK { \"id\": \"6d5f9bae-a31b-4b7b-82c4-3853eda2b011\", \"username\": \"richard\", \"first_name\": \"Richard\", \"last_name\": \"Hendriks\", \"email\": \"richard@piedpiper.com\", }","title":"Update your profile information"}]}